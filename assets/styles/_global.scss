@use 'variables' as vars;
@use 'mixin' as mixins;


.form-control{
    background: rgba($color: vars.$theme-color, $alpha: .1);
    color: vars.$theme-color!important;
    padding-left: 50px!important;
    border: none;
    &:focus{
        border: 1px solid rgba($color: vars.$theme-color, $alpha: .5);
        box-shadow: none;
        // background: rgba($color: vars.$theme-color, $alpha: .2);
    }
}
.is-invalid{
    box-shadow: 0 0 5px rgba($color: #ff0000, $alpha: .5);
}
.custom-input{
    position: relative;
    .custom-input-icon{
        position: absolute;
        top: 50%;
        left: 16px;
        transform: translateY(-50%);
        color: vars.$theme-color;
        font-size: 24px;
    }
    .error-message{
        color: red;
        font-size: 12px;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 32px;
    }
}

.theme-button{
    background: linear-gradient(135deg, vars.$primary-color, vars.$secondary-color);
    color: rgb(0, 0, 0);
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.5s;
    font-size: 14px;
    font-weight: 500;
    text-shadow: 0 0 5px vars.$primary-color;

    &:hover{
        background: linear-gradient(135deg, vars.$secondary-color, vars.$primary-color);
    }
}

.theme-button-lg{
    padding: 12px 16px;
    font-size: 18px;
}

.form-floating > label{
    color: rgba($color: vars.$theme-color, $alpha: 0.5);
    padding-left: 56px;
    sup{
        color: rgba(red, 0.5);
    }
}

.form-floating > .form-control-plaintext ~ label:after, .form-floating > .form-control:focus ~ label:after, .form-floating > .form-control:not(:placeholder-shown) ~ label:after, .form-floating > .form-select ~ label:after{
    background: transparent;
}

